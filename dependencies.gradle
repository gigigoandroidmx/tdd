/*
 * Copyright (c) 2017 Gigigo Android Development Team MÃ©xico
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext{

//    // Android sdk version
    COMPILE_SDK_VERSION = 26
    BUILD_TOOLS_VERSION = "26.1.0"
    MIN_SDK_VERSION  = 21
    TARGET_SDK_VERSION = 26

    //Dependency version
    final JUNIT_VERSION = '4.12'
    final RUNNER_VERSION = '1.0.1'
    final ESPRESSO_VERSION = '3.0.1'
    final SUPPORT_VERSION = '26.1.0'
    final CONSTRAINT_LAYOUT_VERSION = '1.0.2'

    final GSON_VERSION = '2.3.0'

//    retrofitVersion = '2.2.0'
//    okhttpVersion = '3.7.0'
//    logginginterceptorVersion = '2.0.0'
//    butterknifeVersion = '8.4.0'

    //Packages
   final JUNIT_PACKAGE = 'junit'
   final RUNNER_PACKAGE = 'com.android.support.test'
   final ESPRESSO_PACKAGE = 'com.android.support.test.espresso'
   final SUPPORT_PACKAGE = 'com.android.support'
   final SUPPORT_CONSTRAINT_PACKAGE = 'com.android.support.constraint'
   final RETROFIT_PACKAGE = 'com.squareup.retrofit2'
//   final OKHTTP_PACKAGE = 'com.squareup.okhttp3'
//   final LOGGING_INTERCEPTOR_PACKAGE  = 'com.github.ihsanbal'
//   final BUTTERKNIFE_PACKAGE = 'com.jakewharton'

    //Libraries
    libraries = [
            design : buildDependency(SUPPORT_PACKAGE, 'design', SUPPORT_VERSION),
            appcompat : buildDependency(SUPPORT_PACKAGE, 'appcompat-v7', SUPPORT_VERSION),
            recyclerview : buildDependency(SUPPORT_PACKAGE, 'recyclerview-v7', SUPPORT_VERSION),
            support : buildDependency(SUPPORT_PACKAGE, 'support-v4', SUPPORT_VERSION),
            constraintlayout : buildDependency(SUPPORT_CONSTRAINT_PACKAGE, 'constraint-layout', CONSTRAINT_LAYOUT_VERSION),

            gsonconverter : buildDependency(RETROFIT_PACKAGE, 'converter-gson', GSON_VERSION)

//            retrofit :                  buildDependency(retrofitPackage, 'retrofit', retrofitVersion),
//            okhttp :                    buildDependency(okhttpPackage, 'logging-interceptor', okhttpVersion),
//            logginginterceptor :        buildDependency(logginginterceptorPackage, 'LoggingInterceptor', logginginterceptorVersion),
//            butterknife :               buildDependency(butterknifePackage, 'butterknife', butterknifeVersion),
//            butterknifecompiler :       buildDependency(butterknifePackage, 'butterknife-compiler', butterknifeVersion),
    ]

    //Testing
    testing = [
            junit : buildDependency(JUNIT_PACKAGE, 'junit', JUNIT_VERSION),
            runner : buildDependency(RUNNER_PACKAGE, 'runner', RUNNER_VERSION),
            espresso : buildDependency(ESPRESSO_PACKAGE, 'espresso-core', ESPRESSO_VERSION)
    ]

    //Modules
    modules = [
            kmvp : project(':kmvp')
    ]
}

/**
 * Build an implementation dependency
 * @param pack group id
 * @param dependency artifact id
 * @param version version dependency
 * @return a dependency string
 */
static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}